-- Step 1: Create the CustomerEvents table
CREATE TABLE CustomerEvents (
    EventID INT PRIMARY KEY,
    CustomerID INT,
    EventName NVARCHAR(50),
    EventDateTime DATETIME,
    SessionID INT
);

-- This step sets up the CustomerEvents table to record each customer action,
-- along with session IDs and timestamps, helping us to track specific events
-- chronologically for each session.

-- Sample Data Insertion
-- The sample data simulates customer actions (e.g., "Site Visit," "Product View," 
-- "Add to Cart") across multiple customers and sessions, helping to trace the 
-- customer's journey in a session.

INSERT INTO CustomerEvents (EventID, CustomerID, EventName, EventDateTime, SessionID) VALUES
    -- Customer 201, with a complete journey including a return
    (1, 201, 'Site Visit', '2024-01-10 08:00', 1),
    (2, 201, 'Product View', '2024-01-10 08:05', 1),
    (3, 201, 'Add to Cart', '2024-01-10 08:10', 1),
    (4, 201, 'Purchase', '2024-01-10 08:15', 1),
    (5, 201, 'Order Tracking', '2024-01-11 10:00', 1),
    (6, 201, 'Delivery', '2024-01-12 15:00', 1),
    (7, 201, 'Return', '2024-01-15 14:00', 1),
    -- Customer 202, with a different purchase date and a return
    (8, 202, 'Site Visit', '2024-01-11 09:00', 2),
    (9, 202, 'Product View', '2024-01-11 09:10', 2),
    (10, 202, 'Add to Cart', '2024-01-11 09:15', 2),
    (11, 202, 'Purchase', '2024-01-11 09:20', 2),
    (12, 202, 'Order Tracking', '2024-01-12 11:00', 2),
    (13, 202, 'Delivery', '2024-01-13 14:00', 2),
    (14, 202, 'Return', '2024-01-16 13:00', 2),
    -- Customer 203, with a purchase and delivery but no return
    (15, 203, 'Site Visit', '2024-01-12 08:30', 3),
    (16, 203, 'Product View', '2024-01-12 08:40', 3),
    (17, 203, 'Add to Cart', '2024-01-12 08:45', 3),
    (18, 203, 'Purchase', '2024-01-12 08:50', 3),
    (19, 203, 'Order Tracking', '2024-01-13 09:30', 3),
    (20, 203, 'Delivery', '2024-01-14 12:00', 3),
    -- Customer 204, with two separate purchases, only one with a return
    (21, 204, 'Site Visit', '2024-01-13 10:00', 4),
    (22, 204, 'Product View', '2024-01-13 10:05', 4),
    (23, 204, 'Add to Cart', '2024-01-13 10:15', 4),
    (24, 204, 'Purchase', '2024-01-13 10:20', 4),
    (25, 204, 'Order Tracking', '2024-01-14 11:00', 4),
    (26, 204, 'Delivery', '2024-01-15 14:00', 4),
    (27, 204, 'Site Visit', '2024-01-20 09:00', 5),
    (28, 204, 'Product View', '2024-01-20 09:10', 5),
    (29, 204, 'Add to Cart', '2024-01-20 09:15', 5),
    (30, 204, 'Purchase', '2024-01-20 09:20', 5),
    (31, 204, 'Order Tracking', '2024-01-21 11:30', 5),
    (32, 204, 'Delivery', '2024-01-22 13:00', 5),
    (33, 204, 'Return', '2024-01-25 10:00', 5),
    -- Customer 205, with a purchase and delivery, no return
    (34, 205, 'Site Visit', '2024-01-14 07:45', 6),
    (35, 205, 'Product View', '2024-01-14 07:50', 6),
    (36, 205, 'Add to Cart', '2024-01-14 08:00', 6),
    (37, 205, 'Purchase', '2024-01-14 08:10', 6),
    (38, 205, 'Order Tracking', '2024-01-15 09:00', 6),
    (39, 205, 'Delivery', '2024-01-16 11:00', 6),
    -- Customer 206, with a full journey including return
    (40, 206, 'Site Visit', '2024-01-15 10:00', 7),
    (41, 206, 'Product View', '2024-01-15 10:05', 7),
    (42, 206, 'Add to Cart', '2024-01-15 10:10', 7),
    (43, 206, 'Purchase', '2024-01-15 10:15', 7),
    (44, 206, 'Order Tracking', '2024-01-16 12:00', 7),
    (45, 206, 'Delivery', '2024-01-17 14:00', 7),
    (46, 206, 'Return', '2024-01-20 13:00', 7),
    -- Customer 207, with a purchase and delivery, no return
    (47, 207, 'Site Visit', '2024-01-16 09:30', 8),
    (48, 207, 'Product View', '2024-01-16 09:35', 8),
    (49, 207, 'Add to Cart', '2024-01-16 09:40', 8),
    (50, 207, 'Purchase', '2024-01-16 09:45', 8),
    (51, 207, 'Order Tracking', '2024-01-17 10:00', 8),
    (52, 207, 'Delivery', '2024-01-18 16:00', 8),
    -- Customer 208, multiple purchases, one with return
    (53, 208, 'Site Visit', '2024-01-17 08:20', 9),
    (54, 208, 'Product View', '2024-01-17 08:25', 9),
    (55, 208, 'Add to Cart', '2024-01-17 08:30', 9),
    (56, 208, 'Purchase', '2024-01-17 08:35', 9),
    (57, 208, 'Order Tracking', '2024-01-18 10:30', 9),
    (58, 208, 'Delivery', '2024-01-19 13:00', 9),
    (59, 208, 'Return', '2024-01-21 15:00', 9),
    (60, 208, 'Site Visit', '2024-02-01 08:20', 10),
    (61, 208, 'Product View', '2024-02-01 08:25', 10),
    (62, 208, 'Add to Cart', '2024-02-01 08:30', 10),
    (63, 208, 'Purchase', '2024-02-01 08:35', 10),
    (64, 208, 'Order Tracking', '2024-02-02 10:30', 10),
    (65, 208, 'Delivery', '2024-02-03 13:00', 10),
    -- Customer 209, purchase only, no delivery or return
    (66, 209, 'Site Visit', '2024-01-18 11:15', 11),
    (67, 209, 'Product View', '2024-01-18 11:20', 11),
    (68, 209, 'Add to Cart', '2024-01-18 11:25', 11),
    (69, 209, 'Purchase', '2024-01-18 11:30', 11),
    -- Customer 210, complete journey including return
    (70, 210, 'Site Visit', '2024-01-19 12:10', 12),
    (71, 210, 'Product View', '2024-01-19 12:15', 12),
    (72, 210, 'Add to Cart', '2024-01-19 12:20', 12),
    (73, 210, 'Purchase', '2024-01-19 12:25', 12),
    (74, 210, 'Order Tracking', '2024-01-20 14:00', 12),
    (75, 210, 'Delivery', '2024-01-21 15:30', 12),
    (76, 210, 'Return', '2024-01-23 14:00', 12),
    -- Customer 211, partial journey without purchase
    (77, 211, 'Site Visit', '2024-01-20 09:00', 13),
    (78, 211, 'Product View', '2024-01-20 09:10', 13),
    -- Customer 212, purchase and delivery, no return
    (79, 212, 'Site Visit', '2024-01-21 08:30', 14),
    (80, 212, 'Product View', '2024-01-21 08:40', 14),
    (81, 212, 'Add to Cart', '2024-01-21 08:45', 14),
    (82, 212, 'Purchase', '2024-01-21 08:50', 14),
    (83, 212, 'Order Tracking', '2024-01-22 09:30', 14),
    (84, 212, 'Delivery', '2024-01-23 12:00', 14),
    -- Customer 213, full journey including return
    (85, 213, 'Site Visit', '2024-01-22 10:00', 15),
    (86, 213, 'Product View', '2024-01-22 10:05', 15),
    (87, 213, 'Add to Cart', '2024-01-22 10:10', 15),
    (88, 213, 'Purchase', '2024-01-22 10:15', 15),
    (89, 213, 'Order Tracking', '2024-01-23 11:00', 15),
    (90, 213, 'Delivery', '2024-01-24 13:00', 15),
    (91, 213, 'Return', '2024-01-27 15:00', 15),
    -- Customer 214, purchase only
    (92, 214, 'Site Visit', '2024-01-23 07:45', 16),
    (93, 214, 'Product View', '2024-01-23 07:50', 16),
    (94, 214, 'Add to Cart', '2024-01-23 08:00', 16),
    (95, 214, 'Purchase', '2024-01-23 08:10', 16),
    -- Customer 215, journey with purchase but no delivery or return
    (96, 215, 'Site Visit', '2024-01-24 08:00', 17),
    (97, 215, 'Product View', '2024-01-24 08:05', 17),
    (98, 215, 'Add to Cart', '2024-01-24 08:10', 17),
    (99, 215, 'Purchase', '2024-01-24 08:15', 17),
    (100, 215, 'Order Tracking', '2024-01-24 09:00', 17);

-- Explanation:
-- Each customer follows a unique path through various events on the site. This data
-- enables us to analyze how customers progress and identify common patterns or points
-- where they may abandon their journey.
        

-- Step 2: Using Recursive CTE to calculate previous events and time intervals
WITH EventTimes AS (
    SELECT 
        CustomerID,
        SessionID,
        EventName,
        EventDateTime,
        -- Using LAG function to find the previous event time for each event within a session
        LAG(EventDateTime) OVER (PARTITION BY CustomerID, SessionID ORDER BY EventDateTime) 
        AS PrevEventDateTime,
        -- Using LAG function to find the previous event name within a session
        LAG(EventName) OVER (PARTITION BY CustomerID, SessionID ORDER BY EventDateTime) 
        AS PrevEventName
    FROM 
        CustomerEvents
    WHERE 
        EventName IN ('Product View', 'Add to Cart', 'Purchase', 'Delivery', 'Return')
),

-- Step 3: Calculate specific time differences between key events

-- Calculate Time Differences Between Events
-- The TimeDifferences CTE uses CASE statements to calculate specific time intervals
--  between events, such as:
-- Time from "Product View" to "Add to Cart"
-- Time from "Add to Cart" to "Purchase"
-- Time from "Delivery" to "Return" (if applicable)



TimeDifferences AS (
    SELECT
        CustomerID,
        SessionID,
        -- Calculate time from "Product View" to "Add to Cart"
        CASE 
            WHEN EventName = 'Add to Cart' AND PrevEventName = 'Product View' 
            THEN DATEDIFF(MINUTE, PrevEventDateTime, EventDateTime)
            
            ELSE NULL 
        END AS TimeToAddToCartMinutes,
        -- Calculate time from "Add to Cart" to "Purchase"
        CASE 
            WHEN EventName = 'Purchase' AND PrevEventName = 'Add to Cart' 
            THEN DATEDIFF(MINUTE, PrevEventDateTime, EventDateTime)
            
            ELSE NULL 
        END AS TimeToPurchaseMinutes,
        -- Calculate time from "Delivery" to "Return"
        CASE 
            WHEN EventName = 'Return' AND PrevEventName = 'Delivery' 
            THEN DATEDIFF(DAY, PrevEventDateTime, EventDateTime)
            
            ELSE NULL 
        END AS TimeToReturnDays,
        -- Capture the date of purchase for analysis
        CASE 
            WHEN EventName = 'Purchase' THEN CAST(EventDateTime AS DATE)
            ELSE NULL
        END AS PurchaseDate,
        -- Capture the date of return for analysis
        CASE 
            WHEN EventName = 'Return' THEN CAST(EventDateTime AS DATE)
            ELSE NULL
        END AS ReturnDate
    FROM 
        EventTimes
)

-- Step 4: Aggregate Results
-- In this final query, we use the results from the TimeDifferences CTE to summarize
-- each customer session by calculating the maximum time intervals for each event type.
SELECT 
    CustomerID,
    SessionID,
    -- Total time from "Product View" to "Add to Cart"
    MAX(TimeToAddToCartMinutes) AS TotalTimeToAddToCartMinutes,
    -- Total time from "Add to Cart" to "Purchase"
    MAX(TimeToPurchaseMinutes) AS TotalTimeToPurchaseMinutes,
    -- Total time from "Delivery" to "Return" if applicable
    MAX(TimeToReturnDays) AS TotalTimeToReturnDays,
    -- The date of the purchase
    MAX(PurchaseDate) AS PurchaseDate,
    -- The date of the return
    MAX(ReturnDate) AS ReturnDate
FROM 
    TimeDifferences
GROUP BY 
    CustomerID, 
    SessionID
ORDER BY 
    CustomerID, 
    SessionID;

-- Conclusion
-- In this tutorial, we successfully tracked customer journeys across various stages,
-- from browsing to purchasing and returning. By using SQL recursive CTEs, 
-- we were able to calculate the time taken for each stage in the customer journey.
-- This method allows e-commerce platforms to gain insights into customer behavior, 
-- helping to improve the user experience, tailor marketing efforts, 
-- and optimize conversion rates. Thanks for watching, and see you in the next video!
